@using Dos.ORM.Web.App_Common.Mvc
@{
    ViewBag.Title = "角色管理";
    Layout = "~/Views/BasePage/_LayoutMsSysDetailSimple.cshtml";
}
<style>
    .role-type {
        padding: 5px 0 5px 10px;
        border-bottom: 1px dashed #c2c2c2;
    }

    .role-selected {
        padding: 10px 0px 12px 10px;
        border-bottom: 1px dashed #c2c2c2;
    }
</style>
<script src="~/Content/Components/zTree/js/jquery.ztree.core.min.js"></script>
<script src="~/Content/Components/zTree/js/jquery.ztree.excheck.min.js"></script>
<div data-options="region:'west',border:false,split:true" style="width: 360px;">
    <div class="role-type">
        项目名称：@Html.ExtTextBox("txtSearchProj", new { width = 150, onChange = "projNameChange" })
        <button id="btnSearchProj" class="easyui-linkbutton">搜索项目</button>
    </div>
    <ul id="zTreePanel" class="ztree"></ul>
</div>
<div data-options="region:'east',border:false,split:true" style="width: 360px;">
    <div class="role-selected">已选项目：</div>
    <ul id="zTreeSelected" class="ztree"></ul>
</div>
<div data-options="region:'south',border:false" class="frm-toolbar">
    @Html.ExtAuthBtn()
</div>
<div data-options="region:'center',border:false">
</div>
<script>
    var thisForm, oType = '@ViewBag.oType', keyId = '@ViewBag.keyId';

    $(function () {
        initData();
    });

    function initData() {
        thisForm = $('#frmMain');

        getModules('', true);
        getSelectedModules()
    }
    var selectedIds = '';

    //获取左侧模块树
    function getModules(name, init) {
        QBO.plu.ajax({
            url: '/MsManage/User/GetProjLabModule',
            data: { projName: name, selectedIds: selectedIds, isInit: init, keyId: keyId }
        }, function (data) {
            QBO.plu.zt.init('zTreePanel',
                data,
                {
                    check: true,
                    chkboxTypeY: 'ps',
                    chkboxTypeX: 'ps',
                    onCheck: ztreeCheck,
                    onClick: ztreeClick,
                });
        });
    }

    //获取已选择模块
    function getSelectedModules() {
        QBO.plu.ajax({
            url: '/MsManage/User/GetProjLabSelected',
            data: { keyId: keyId }
        }, function (data) {
            for (var i = 0; i < data.length; i++) {
                selectedIds += data[i].id + ',';
            }
            QBO.plu.zt.init('zTreeSelected',
                data,
                {
                    check: true,
                    chkboxTypeY: 'ps',
                    chkboxTypeX: 'ps'
                });
        });
    }

    //zTreePanel选择项改变
    function ztreeCheck(event, treeId, treeNode) {
        var ids = selectedIds.split(',');

        //如果当前节点是子节点，且其父节点的子节点全部没有选中，则父节点也取消选中
        if (!treeNode.isParent) {
            var parentNode = treeNode.getParentNode();
            var childNodes = parentNode.children;
            var allNohecked = true;
            for (var i = 0; i < childNodes.length; i++) {
                if (childNodes[i].checked)
                    allNohecked = false;
            }
            if (allNohecked)
                $.fn.zTree.getZTreeObj(treeId).checkNode(parentNode, false, true);
        }

        //勾选
        if (treeNode.checked) {
            if ($.inArray(treeNode.id, ids) == -1)
                ids.push(treeNode.id);
            //如果当前节点是父节点则将其子节点的id也加入selectedIds中
            if (treeNode.isParent) {
                var childNodes = treeNode.children;
                for (var i = 0; i < childNodes.length; i++) {
                    if ($.inArray(childNodes[i].id, ids) == -1)
                        ids.push(childNodes[i].id);
                }
            }
            else {
                var parentNode = treeNode.getParentNode();
                if ($.inArray(parentNode.id, ids) == -1)
                    ids.push(parentNode.id);
            }
        }
            //取消勾选
        else {
            if ($.inArray(treeNode.id, ids) != -1)
                ids.splice($.inArray(treeNode.id, ids), 1);
            //如果当前节点是父节点则将其子节点的id也从selectedIds中删除
            if (treeNode.isParent) {
                var childNodes = treeNode.children;
                for (var i = 0; i < childNodes.length; i++) {
                    if ($.inArray(childNodes[i].id, ids) != -1)
                        ids.splice($.inArray(childNodes[i].id, ids), 1);
                }
            }
                //如果当前节点是子节点，且其父节点也没有被选中，则将其父节点也从selectedIds中删除
            else {
                var parentNode = treeNode.getParentNode();
                if (!parentNode.checked && $.inArray(parentNode.id, ids) != -1)
                    ids.splice($.inArray(parentNode.id, ids), 1);
            }
        }

        for (var i = 0; i < ids.length; i++) {
            if (ids[i].length == 0)
                ids.splice(i, 1);
        }

        selectedIds = ids.join(',');
        getModulesFromId();
    }
    function ztreeClick(event, treeId, treeNode) {
        //如果是父节点，则把子节点的勾选状态改为和父节点一样
        if (treeNode.isParent) {
            var childNodes = treeNode.children;
            for (var i = 0; i < childNodes.length; i++) {
                $.fn.zTree.getZTreeObj(treeId).checkNode(childNodes[i], treeNode.checked, true);
            }
        }
        ztreeCheck(event, treeId, treeNode);
    }

    function getModulesFromId() {
        QBO.plu.ajax({
            url: '/MsManage/User/GetProjLabFromId',
            data: { newIds: selectedIds }
        }, function (data) {
            QBO.plu.zt.init('zTreeSelected',
                data,
                {
                    check: true,
                    chkboxTypeY: 'ps',
                    chkboxTypeX: 'ps'
                });
        });
    }

    function saveData() {
        if (selectedIds.length <= 0) {
            QBO.dia.confirm('当前未选择包含的项目，确定要继续？', function () {
                saveModule();
            });
        } else {
            saveModule(true);
        }
    }

    function saveModule(isSavePId) {
        QBO.plu.ajax({
            url: '/MsManage/User/SaveProjLab',
            data: { selectedIds: selectedIds }
        }, function (data) {
            QBO.dia.msg(data.Msg, {
                icon: data.Result === 100 ? 'right' : 'error',
                endCallback: function () {
                    if (data.Result === 100) { QBO.frm.closeWin(function () { QBO.frm.getWin().reloadGridData(); }); }
                }
            });
        });

    }

    $('#btnSearchProj').click(function () {
        getModules($('#txtSearchProj').val(), false);
    });

    function projNameChange(newValue, oldValue) {
        getModules(newValue, false);
    }
</script>
