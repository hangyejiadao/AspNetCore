@{
    ViewBag.Title = "BhzIndex1_1";
    Layout = "~/Views/BasePage/_LayoutMsSysList.cshtml";

}
<link href="~/Content/assets/global/daterangepicker/boot/bootstrap.min.css" rel="stylesheet" />
@*<link href="~/Content/assets/global/daterangepicker/boot/font-awesome.min.css" rel="stylesheet" />*@
<link href="~/Content/assets/global/daterangepicker/boot/daterangepicker.css" rel="stylesheet" />
<link href="~/Content/assets/global/bootstrap/css/bootstrap.min.css" rel="stylesheet" />

<script src="~/Content/assets/global/daterangepicker/boot/bootstrap.min.js"></script>
<script src="~/Content/assets/global/daterangepicker/boot/daterangepicker.min.js"></script>
<script src="~/Content/assets/global/daterangepicker/boot/moment.min.js"></script>

<script src="~/Content/Components/AngularJS/angular.min.js"></script>

<style>
    .panel-body {
        padding: 2px 0px;
    }

    .btn-default {
        color: #02a9f3;
        background-color: #fff;
        border: 1px solid #02a9f3;
    }

    .btn-primary {
        color: #fff;
        background-color: #02a9f3;
        border: 1px solid #02a9f3;
    }

    .btn-primary.focus, .btn-primary:focus {
        color: #fff;
        background-color: #02a9f3;
        border: 1px solid #02a9f3;
    }

    .kx-search {
        background-color: #eee;
        border: 1px solid #ccc;
        color: #313131;
    }

    .kx-search:focus {
        background-color: #eee;
        border: 1px solid #ccc;
        color: #313131;
    }

    .form-inline .btn:hover {
        background: #0da6ea;
        border-color: #0da6ea;
        color: #fff;
    }
  .spinner {  
  width: 100px;  
}  
.spinner input {  
  text-align: right;  
}  
.input-group-btn-vertical {  
  position: relative;  
  white-space: nowrap;  
  width: 1%;  
  vertical-align: middle;  
  display: table-cell;  
}  
.input-group-btn-vertical > .btn {  
  display: block;  
  float: none;  
  width: 100%;  
  max-width: 100%;  
  padding: 8px;  
  margin-left: -1px;  
  position: relative;  
  border-radius: 0;  
}  
.input-group-btn-vertical > .btn:first-child {  
  border-top-right-radius: 4px;  
}  
.input-group-btn-vertical > .btn:last-child {  
  margin-top: -2px;  
  border-bottom-right-radius: 4px;  
}  
.input-group-btn-vertical i{  
  position: absolute;  
  top: 0;  
  left: 4px;  
} 
</style>

<div id="toolBarMain" class="list-toolbar" ng-app="pageApp" ng-controller="pageCtrl">

    <div class="row">

        <div class="form-inline" style="padding-left:20px;">

            <div class="input-group input-group-sm">
                <input type="text" ng-model="paramsData.StartEnd" id="F_StartEnd" class="form-control" placeholder="请选择试验日期" style="width:180px;" />
                <span class="input-group-addon"><i class="fa fa-calendar bigger-110"></i></span>
            </div>
            
            <div class="form-group input-group-sm">
                <select class="form-control" ng-model="paramsData.IsPass" ng-change="queryData()">                    
                    <option selected="selected" value="合格" >合格</option>
                    <option value="不合格">不合格</option>
                    <option value="">-全部-</option>
                </select>
            </div>
      
            <div class="form-group input-group-sm">
                <select class="form-control" ng-model="paramsData.TestType" ng-change="queryData()">
                    <option value="HNTKY" selected>抗压强度</option>
                    <option value="HNTKZ">抗折强度</option>
                </select>
            </div>

            <div class="form-group input-group-sm">
                <select class="form-control" ng-model="paramsData.GradeCode" ng-change="queryData()">
                    <option selected="selected" value="">强度</option>
                    <option value="C10">C10</option>
                    <option value="C15">C15</option>
                    <option value="C20">C20</option>
                    <option value="C25">C25</option>
                    <option value="C30">C30</option>
                    <option value="C35">C35</option>
                    <option value="C40">C40</option>
                    <option value="C45">C45</option>
                    <option value="C50">C50</option>
                    <option value="C55">C55</option>
                    <option value="C60">C60</option>
                    <option value="C65">C65</option>
                    <option value="C70">C70</option>
                    <option value="C75">C75</option>
                    <option value="C80">C80</option>
                    <option value="C85">C85</option>
                    <option value="other">其他</option>
                </select>
            </div>

            @*<div class="form-group input-group-sm">
                <span>样品编号</span>
                <input type="text" ng-model="paramsData.SampleNum" class="form-control" placeholder="请输入样品编号" style="width:110px">
            </div>

            <div class="form-group input-group-sm">
                <span>工程部位</span>
                <input type="text" ng-model="paramsData.PlacePurpose" class="form-control" placeholder="请输入工程部位" style="width:110px">
            </div>*@

            <div class="form-group input-group-sm">              
                <select class="form-control" ng-model="paramsData.AgeDays" ng-change="queryData()">
                    <option selected="selected" value="">龄期(天)</option>
                    <option value="3">3</option>
                    <option value="7">7</option>
                    <option value="28">28</option>
                    <option value="56">56</option>                    
                </select>
            </div>

            <div class="form-group input-group-sm">
                <span>达到强度比(%)</span>
                <input type="number" min="0" max="1000" ng-model="paramsData.StartScale" class="form-control" placeholder="" style="width:60px">～
                <input type="number" min="0" max="1000" ng-model="paramsData.EndScale" class="form-control" placeholder="" style="width:60px">
            </div>

            <div class="form-group input-group-sm">
                <input type="text" ng-model="paramsData.FilterText" class="form-control" placeholder="请输入样品编号/工程部位" style="width:160px">
            </div>

            <div class="form-group input-group-sm">
                <a href="javascript:;" class="btn btn-sm btn-primary" ng-click="queryData()">查询</a>
            </div>
            <div class="form-group input-group-sm">
                <a href="javascript:;" class="btn btn-sm btn-primary"  onclick="print()">批量打印</a>
            </div>      
        </div>
        @*{{paramsData}}*@
    </div>

</div>

<script type="text/javascript">

    var gridObj, gdKeyId = 'SYJID';

    var tabCol = {}, hideCols = [], initHideCols = ["KYQD"];
    
    //--混凝土	
    //--抗压强度 HNTKY
    //--抗折强度 HNTKZ

    var paramsData = {
        "BhzApi": "",
        "LoadApi": '@ViewBag.LoadApi',
        "OrganID": "",//a5eb21ee-975f-4003-9a3c-7b84a0c9bdd8标段
        "TableType": 0,//表类型(0=TW_YLJ 1=TW_WNJ)
        "TestType": "HNTKY",//试验类型=HNTKY 抗压强度  HNTKZ 抗折强度
        "SBBH": "",//试验机编号
        "StartEnd": "",//日期
        "StartDate": "",//开始日期
        "EndDate": "",//结束日期
        "GradeCode": "",//强度等级
        "IsPass": "合格",//是否合格
        //"SampleNum": "",//样品编号
        //"PlacePurpose": "",//工程部位    
        "AgeDays": "",//龄期(天)
        "StartScale": "",//
        "EndScale": "",//
        "FilterText":""
    }
      

    $(function () {

    });
    
    //初始化Angular
    var pageApp = angular.module('pageApp', []);
    pageApp.controller('pageCtrl', function ($scope, $http, $timeout) {
        initNgData($scope, $http);
        initNgEvent($scope, $http, $timeout);
        initNgQuery($scope, $http, $timeout);
    });

    //初始化ng数据
    function initNgData($scope, $http) {       
        $scope.paramsData = paramsData;
        $scope.paramsData.OrganID = parent.selData.TargetId;
        $scope.paramsData.BhzApi = parent.selData.ExtraData;

        var idxData = parent.idxData;
        if (idxData.idx_mod1 == 0 && idxData.idx_mod2 == 0) {
            $scope.paramsData.LoadApi = 1;
        } else {
            $scope.paramsData.LoadApi = 0;
        }
        
        $scope.tabCol = tabCol;
        $scope.hideCols = hideCols;
                      
        $scope.init = 0;
    }

    //初始化ng事件
    function initNgEvent($scope, $http, $timeout) {

        //选择时间设置
        $scope.setDateRange = function () {

            var startDate = $scope.paramsData.StartDate;
            var endDate = $scope.paramsData.EndDate;

            $('#F_StartEnd').daterangepicker(
                   {
                       startDate: startDate,//moment().startOf('day'),
                       endDate: endDate,//moment(),
                       //minDate: '01/01/2012',    //最小时间  
                       maxDate: moment(), //最大时间   
                       //dateLimit: {
                       //    days: 30
                       //}, //起止时间的最大间隔  
                       singleDatePicker: false,
                       showDropdowns: true,
                       showWeekNumbers: false, //是否显示第几周  
                       timePicker: false, //是否显示小时和分钟  
                       timePickerIncrement: 60, //时间的增量，单位为分钟  
                       timePicker12Hour: false, //是否使用12小时制来显示时间                    
                       ranges: {

                           '今日': [moment().startOf('day'), moment()],
                           '昨日': [moment().subtract('days', 1).startOf('day'), moment().subtract('days', 1).endOf('day')],
                           '最近7日': [moment().subtract('days', 6), moment()],
                           //'最近15日': [moment().subtract('days', 15), moment()],
                           '最近30日': [moment().subtract('days', 29), moment()],
                           '最近3月': [moment().subtract(3, "month").startOf("month"), moment().subtract(1, "month").endOf("month")],
                           '本周': [moment().startOf("week"), moment().endOf("week")],
                           //'上周': [moment().subtract(1, "week").startOf("week"), moment().subtract(1, "week").endOf("week")],
                           '本月': [moment().startOf("month"), moment().endOf("month")],
                           '上月': [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")],
                           //'本季': [moment().startOf("QUARTER"), moment().endOf("QUARTER")],
                           '本年': [moment().startOf("year"), moment().endOf("year")],
                           //'上年': [moment().subtract(1, "year").startOf("year"), moment().subtract(1, "year").endOf("year")]
                       },
                       opens: 'right', //日期选择框的弹出位置  
                       buttonClasses: ['btn btn-default'],
                       applyClass: 'btn-small btn-primary blue',
                       cancelClass: 'btn-small',
                       format: 'YYYY-MM-DD', //控件中from和to 显示的日期格式  
                       separator: ' 至 ',
                       autoUpdateInput: false,
                       locale: {
                           applyLabel: '确定',
                           cancelLabel: '取消',
                           fromLabel: '起始时间',
                           toLabel: '结束时间',
                           customRangeLabel: '自定义',
                           daysOfWeek: ['日', '一', '二', '三', '四', '五', '六'],
                           monthNames: ['一月', '二月', '三月', '四月', '五月', '六月',
                                   '七月', '八月', '九月', '十月', '十一月', '十二月'],
                           firstDay: 1
                       }
                   }, function (start, end, label) {//格式化日期显示框   
                       var startDate = start.format('YYYY-MM-DD');
                       var endDate = end.format('YYYY-MM-DD');               
                       queryDate(startDate, endDate);
                       QBO.plu.cookie.set("StartEnd", (startDate + ' 至 ' + endDate), { expires: 7, path: '/' });
                   });


        }
        
        //获取拌合机cookie
        $scope.getCookieData = function () {

            var startEnd = QBO.plu.cookie.get("StartEnd");
            if (startEnd != '') {
                var seDate = startEnd.split(' 至 ');
                $scope.paramsData.StartEnd = startEnd;
                $scope.paramsData.StartDate = seDate[0];;
                $scope.paramsData.EndDate = seDate[1];
            } else {
                var startDate = moment().subtract('days', 6).format('YYYY-MM-DD');
                var endDate = moment().format('YYYY-MM-DD');
                $scope.paramsData.StartEnd = (startDate + ' 至 ' + endDate);
                $scope.paramsData.StartDate = startDate;
                $scope.paramsData.EndDate = endDate;
            }
        }

        //加载列设置
        $scope.loadTabColSet = function () {

            var params = { BhzApi: $scope.paramsData.BhzApi, TableCode: 'BhzIndex1_1' };

            QBO.plu.ajax({
                chkLogin: false,
                async: false,
                type: 'GET',
                url: 'GetTabColSet',
                data: params
            }, function (result) {
                tabCol = result;
                if (tabCol.ColumnCode == null) {
                    hideCols = initHideCols;
                }
                else {
                    hideCols = JSON.parse(tabCol.ColumnCode);
                }               
            });
        }

        //查询数据
        $scope.queryData = function ()
        {
            if ($scope.init == 0) {
                $scope.init = 1;
                initData();
            }
            else {
                QBO.plu.grid.query(gridObj, $scope.paramsData);
            }          
        }

    }


    //初始化ng查询数据
    function initNgQuery($scope, $http, $timeout) {
        
        var BhzApi = $scope.paramsData.BhzApi;
        if (BhzApi == null || BhzApi == "") {
            return;
        }

        $scope.getCookieData();

        $scope.loadTabColSet();

        $scope.queryData();

        $scope.setDateRange();
    }

</script>

<script type="text/javascript">

    //查询数据
    function ModuleQuery(data) {
        var appElement = document.querySelector('[ng-controller=pageCtrl]');
        var $scope = angular.element(appElement).scope();
        $scope.paramsData.LoadApi = 1;
        $scope.paramsData.OrganID = data.TargetId;
        $scope.paramsData.BhzApi = data.ExtraData;

        $scope.getCookieData();
        $scope.$apply();
        $scope.queryData();
    }

    //选择时间查询
    function queryDate(startDate, endDate) {
        var appElement = document.querySelector('[ng-controller=pageCtrl]');
        var $scope = angular.element(appElement).scope();
        $scope.paramsData.StartEnd = startDate + ' 至 ' + endDate;
        $scope.paramsData.StartDate = startDate;
        $scope.paramsData.EndDate = endDate;
        $scope.$apply();
        $scope.queryData();
    }

    //显示列
    function onHeaderColumnsMenu(e) {
        var obj = $('.datagrid-header-rownumber_icon');
        var X = obj.position().top;
        var Y = obj.position().left;

        if (!QBC.easyUi.grid.cmenu) {
            QBO.plu.grid.createColumnMenu(gridObj, onHideCallBack);
        }
        QBC.easyUi.grid.cmenu.menu('show', {
            left: X,
            top: Y + 66
        });
    }

    //点击保存隐藏列
    function onHideCallBack(item) {
        var field = item.name;

        //if ($.inArray(field, hideCols) == -1)
        if (hideCols.indexOf(field) == -1) {
            //不存在 则添加
            hideCols.push(field);
        } else {
            //存在 删除
            hideCols.splice(hideCols.indexOf(field), 1);
        }

        //保存列设置
        tabCol.ColumnCode = JSON.stringify(hideCols);
        var params = { BhzApi: paramsData.BhzApi, TabCol: JSON.stringify(tabCol) };
        QBO.plu.ajax({
            chkLogin: false,
            type: 'POST',
            data: params,
            url: 'SaveTabColSet'
        }, function (result) {

        });
    }

    //初始化列表
    function initData() {
        gridObj = $('#dg');

        QBO.plu.grid.init(gridObj, {

            keyId: gdKeyId,
            queryParams: paramsData,
            //method:'GET',
            pageSize: 30,
            singleSelect: false,
            nowrap: false,
            url: '/MsSys/SyjOper/GetSYJZBData',
            col: [
                { field: gdKeyId, checkbox: true, title: '选择' },
                {
                    field: 'SJBH', title: '样品编号', width: 180, align: 'center',
                    formatter: function (value, row, index) {
                        return "<a href=\'#\' style=\'color:#31b0d5\' onclick=\'ViewWin(\"" + row.SYJID + "\",\""+paramsData.OrganID+"\" )\'>" + value + "</a>";
                    }
                },
                {
                    field: 'CJMC', title: '工程部位/用途', width: 200,
                    formatter: function (value, data, index) {
                        if (value == null || value == '')
                            return '';
                        else
                            return '<span title="' + value + '"  class="easyui-tooltip">' + value + '</span>';
                    }
                },
                { field: 'SJQD', title: '强度等级', width: 80, align: 'center' },
                { field: 'LQ', title: '龄期(天)', width: 80, align: 'center' },
                { field: 'SJCC', title: '试件尺寸(mm)', width: 120 },
                { field: 'KYQD', title: '抗压强度(MPa)', width: 150 },
                { field: 'QDDBZ', title: '强度测定值(MPa)', width: 100 },
                { field: 'QDBFB', title: '达到设计强度百分比(%)', width: 120 },
                {
                    field: 'PDJG', title: '是否合格', width: 100,
                    styler: function (value, row, index) {
                        if (value == "不合格") {
                            return 'color:red;';
                        }
                    }
                },
                { field: 'SYDate', title: '试验日期', width: 100, align: 'center', formatter: QBO.plu.grid.formatMMDate }                
            ],
            toolbar: 'toolBarMain',
            onLoadSuccess: function (data) {
                $(".easyui-tooltip").tooltip({
                    onShow: function () {
                        $(this).tooltip('tip').css({
                            borderColor: '#000'
                        });
                    }
                });
                $("span.eui-opt-acc").imgPreview();
            },
            onBeforeLoad: function (param) {
                if (hideCols != undefined && hideCols != null) {
                    for (var key in hideCols) {
                        var field = hideCols[key];
                        if (hideCols.indexOf(field) == -1) {
                            gridObj.datagrid('showColumn', field);//不存在则显示
                        }
                        else {
                            gridObj.datagrid('hideColumn', field);//存在则隐藏
                        }
                    }
                }
            },
            onClickRow: function (index, row) {

            }
        });
    }

    //查看
    function ViewWin(id, org) {
       
        var newurl = "/MsSys/SyjDtl/Index/?syjid=" + id + "&orgId=" + org + "&syjapi=" + paramsData.BhzApi;

        QBO.frm.openWin(newurl, { title: '查看详细', isFull: true });
    }

    function print() {
        
        var selData = QBO.plu.grid.get(gridObj, gdKeyId);
        if (selData.arr.length==0) {
            alert('请选择一项纪录');
        } else {
        
            var newurl = "/MsSys/SyjDtl/Prints?Ids=" + selData.arr + "&orgId=" + paramsData.OrganID+"&syjapi=" + paramsData.BhzApi;
            QBO.frm.openWin(newurl, { title: '查看详细', isFull: true });
        } 
    }

</script>

