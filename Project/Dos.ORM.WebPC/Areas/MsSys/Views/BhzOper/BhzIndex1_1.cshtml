@{
    ViewBag.Title = "BhzIndex1_1";
    Layout = "~/Views/BasePage/_LayoutMsSysList.cshtml";

}
<link href="~/Content/assets/global/daterangepicker/boot/bootstrap.min.css" rel="stylesheet" />
@*<link href="~/Content/assets/global/daterangepicker/boot/font-awesome.min.css" rel="stylesheet" />*@
<link href="~/Content/assets/global/daterangepicker/boot/daterangepicker.css" rel="stylesheet" />
<link href="~/Content/assets/global/bootstrap/css/bootstrap.min.css" rel="stylesheet" />

<script src="~/Content/assets/global/daterangepicker/boot/bootstrap.min.js"></script>
<script src="~/Content/assets/global/daterangepicker/boot/daterangepicker.min.js"></script>
<script src="~/Content/assets/global/daterangepicker/boot/moment.min.js"></script>

<script src="~/Content/Components/AngularJS/angular.min.js"></script>

<style>
    .panel-body {
        padding: 2px 0px;
    }

    .btn-default {
        color: #02a9f3;
        background-color: #fff;
        border: 1px solid #02a9f3;
    }

    .btn-primary {
        color: #fff;
        background-color: #02a9f3;
        border: 1px solid #02a9f3;
    }

    .btn-primary.focus, .btn-primary:focus {
        color: #fff;
        background-color: #02a9f3;
        border: 1px solid #02a9f3;
    }

    .kx-search {
        background-color: #eee;
        border: 1px solid #ccc;
        color: #313131;
    }

    .kx-search:focus {
        background-color: #eee;
        border: 1px solid #ccc;
        color: #313131;
    }

    .form-inline .btn:hover {
        background: #0da6ea;
        border-color: #0da6ea;
        color: #fff;
    }
  
</style>
<div id="toolBarMain" class="list-toolbar" ng-app="pageApp" ng-controller="pageCtrl">
   
    <div class="row">

        <div class="form-inline" style="padding-left:20px;">

            <div class="input-group input-group-sm">
                <input type="text" ng-model="paramsData.StartEnd" id="F_StartEnd" class="form-control" placeholder="请选择时间" style="width:180px;" />
                <span class="input-group-addon"><i class="fa fa-calendar bigger-110"></i></span>
            </div>
            
            <div class="form-group input-group-sm">
                <select ng-model="paramsData.QDDJ" class="form-control">
                    <option selected="selected" value="">强度等级</option>
                    <option value="C10">C10</option>
                    <option value="C15">C15</option>
                    <option value="C20">C20</option>
                    <option value="C25">C25</option>
                    <option value="C30">C30</option>
                    <option value="C35">C35</option>
                    <option value="C40">C40</option>
                    <option value="C45">C45</option>
                    <option value="C50">C50</option>
                    <option value="C55">C55</option>
                    <option value="C60">C60</option>
                    <option value="C65">C65</option>
                    <option value="C70">C70</option>
                    <option value="C75">C75</option>
                    <option value="C80">C80</option>
                    <option value="C85">C85</option>
                    <option value="other">其他</option>
                </select>
            </div>

            <div class="form-group input-group-sm">
                <input type="text" ng-model="paramsData.FilterText" class="form-control" placeholder="请输入工程名称/部位">
            </div>
        
            <div class="form-group input-group-sm">
                <a href="javascript:;" class="btn btn-sm btn-primary kx-search" ng-click="queryData()">查询</a>
            </div>
                      
            <div class="form-group input-group-sm">
                <a href="javascript:;" style="margin-left:5px" ng-repeat="item in items"
                   ng-class="{true:'btn btn-sm btn-primary',false:'btn btn-sm btn-default'}[item.BlendNO==paramsData.BHJBH]" ng-click="selectBhzItem(item.BlendNO)">
                    {{::item.BlendName}}
                </a>
            </div>
          
        </div>

    </div>

</div>

<script type="text/javascript">

    var gridObj, gdKeyId = 'ID';

    var tabCol = {}, hideCols = [], initHideCols = ["SJZ_SN", "SJZ_GL6", "SJZ_SN2", "SJZ_KF"];

    var paramsData = {
        "LoadApi": '@ViewBag.LoadApi',
        "OrganID": "",
        "BhzApi": "",
        "StartEnd":"",
        "StartDate": "",
        "EndDate": "",
        "BHJBH": "",
        "QDDJ": "",
        "FilterText": ""
    }

    $(function () {

    });


    //初始化Angular
    var pageApp = angular.module('pageApp', []);
    pageApp.controller('pageCtrl', function ($scope, $http, $timeout) {
        initNgData($scope, $http);
        initNgEvent($scope, $http, $timeout);
        initNgQuery($scope, $http, $timeout);
    });

    //初始化ng数据
    function initNgData($scope, $http) {
              
        $scope.paramsData = paramsData;
        $scope.paramsData.OrganID = parent.selData.TargetId;
        $scope.paramsData.BhzApi = parent.selData.ExtraData;

        var idxData = parent.idxData;
        if (idxData.idx_mod1 == 0 && idxData.idx_mod2 == 0) {
            $scope.paramsData.LoadApi = 1;
        } else {
            $scope.paramsData.LoadApi = 0;
        }

        $scope.tabCol = tabCol;
        $scope.hideCols = hideCols;
               
        $scope.items = [];//拌合机   
        $scope.init = 0;
    }

    //初始化ng事件
    function initNgEvent($scope, $http, $timeout) {

        //选择时间设置
        $scope.setDateRange = function () {
            
            var startDate = $scope.paramsData.StartDate;
            var endDate = $scope.paramsData.EndDate;

            $('#F_StartEnd').daterangepicker(
                   {
                       startDate: startDate,//moment().startOf('day'),
                       endDate: endDate,//moment(),
                       //minDate: '01/01/2012',    //最小时间  
                       maxDate: moment(), //最大时间   
                       //dateLimit: {
                       //    days: 30
                       //}, //起止时间的最大间隔  
                       singleDatePicker: false,
                       showDropdowns: true,
                       showWeekNumbers: false, //是否显示第几周  
                       timePicker: false, //是否显示小时和分钟  
                       timePickerIncrement: 60, //时间的增量，单位为分钟  
                       timePicker12Hour: false, //是否使用12小时制来显示时间                    
                       ranges: {

                           '今日': [moment().startOf('day'), moment()],
                           '昨日': [moment().subtract('days', 1).startOf('day'), moment().subtract('days', 1).endOf('day')],
                           '最近7日': [moment().subtract('days', 6), moment()],
                           //'最近15日': [moment().subtract('days', 15), moment()],
                           '最近30日': [moment().subtract('days', 29), moment()],
                           '最近3月': [moment().subtract(3, "month").startOf("month"), moment().subtract(1, "month").endOf("month")],
                           '本周': [moment().startOf("week"), moment().endOf("week")],
                           //'上周': [moment().subtract(1, "week").startOf("week"), moment().subtract(1, "week").endOf("week")],
                           '本月': [moment().startOf("month"), moment().endOf("month")],
                           '上月': [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")],
                           //'本季': [moment().startOf("QUARTER"), moment().endOf("QUARTER")],
                           '本年': [moment().startOf("year"), moment().endOf("year")],
                           //'上年': [moment().subtract(1, "year").startOf("year"), moment().subtract(1, "year").endOf("year")]
                       },
                       opens: 'right', //日期选择框的弹出位置  
                       buttonClasses: ['btn btn-default'],
                       applyClass: 'btn-small btn-primary blue',
                       cancelClass: 'btn-small',
                       format: 'YYYY-MM-DD', //控件中from和to 显示的日期格式  
                       separator: ' 至 ',
                       autoUpdateInput: false,
                       locale: {
                           applyLabel: '确定',
                           cancelLabel: '取消',
                           fromLabel: '起始时间',
                           toLabel: '结束时间',
                           customRangeLabel: '自定义',
                           daysOfWeek: ['日', '一', '二', '三', '四', '五', '六'],
                           monthNames: ['一月', '二月', '三月', '四月', '五月', '六月',
                                   '七月', '八月', '九月', '十月', '十一月', '十二月'],
                           firstDay: 1
                       }
                   }, function (start, end, label) {//格式化日期显示框   
                       var startDate = start.format('YYYY-MM-DD');
                       var endDate = end.format('YYYY-MM-DD');               
                       queryDate(startDate, endDate);
                       QBO.plu.cookie.set("StartEnd", (startDate + ' 至 ' + endDate), { expires: 7, path: '/' });
                   });


        }
        
        //获取拌合机cookie
        $scope.getCookieData = function () {
            var startEnd = QBO.plu.cookie.get("StartEnd");
            if (startEnd != '') {
                var seDate = startEnd.split(' 至 ');
                $scope.paramsData.StartEnd = startEnd;
                $scope.paramsData.StartDate = seDate[0];;
                $scope.paramsData.EndDate = seDate[1];
            } else {
                var startDate = moment().subtract('days', 6).format('YYYY-MM-DD');
                var endDate = moment().format('YYYY-MM-DD');
                $scope.paramsData.StartEnd = (startDate + ' 至 ' + endDate);
                $scope.paramsData.StartDate = startDate;
                $scope.paramsData.EndDate = endDate;
            }

            var bhzNo = QBO.plu.cookie.get($scope.paramsData.OrganID);
            if (bhzNo != '') {
                $scope.paramsData.BHJBH = bhzNo;
            }
        }

        //获取拌合机
        $scope.loadBhzData = function () {            
           
            $scope.items = [];
            
            var params = { BhzApi: $scope.paramsData.BhzApi, TargetId: $scope.paramsData.OrganID };
                      
            QBO.plu.ng.http({ http: $http, chkLogin: false, url: '/MsSys/BhzOper/GetBhzBhjList', params: params }, function (result) {

                $scope.items = result;

                var bhzNo = QBO.plu.cookie.get($scope.paramsData.OrganID);               
                if (bhzNo != '') {
                    $scope.paramsData.BHJBH = bhzNo;
                }
                else {
                    if ($scope.items != null && $scope.items.length > 0) {
                        $scope.paramsData.BHJBH = $scope.items[0].BlendNO;
                    }
                }

                if ($scope.init == 0) {
                    $scope.init = 1;                   
                    initData();
                }
                else {
                    $scope.queryData();
                }

            });

            
        }

        //选择拌合机
        $scope.selectBhzItem = function (bhzNo) {         
            $scope.paramsData.BHJBH = bhzNo;
            $scope.queryData();
            QBO.plu.cookie.set($scope.paramsData.OrganID, bhzNo, { expires: 7, path: '/' });
        };

        //加载列设置
        $scope.loadTabColSet = function () {

            var params = { BhzApi: $scope.paramsData.BhzApi, TableCode: 'BhzIndex1_1' };

            QBO.plu.ajax({
                chkLogin: false,
                async: false,
                type: 'GET',
                url: 'GetTabColSet',
                data: params
            }, function (result) {
                tabCol = result;
                if (tabCol.ColumnCode == null) {
                    hideCols = initHideCols;
                }
                else {
                    hideCols = JSON.parse(tabCol.ColumnCode);
                }               
            });

            //QBO.plu.ng.http({ http: $http, chkLogin: false, url: '/MsSys/BhzOper/GetTabColSet', params: { TableCode: 'BhzIndex1_1' } }, function (result) {

            //    tabCol = result;
            //    if (tabCol.ColumnCode == null) {
            //        hideCols = initHideCols;
            //    }
            //    else {
            //        hideCols = JSON.parse(tabCol.ColumnCode);
            //    }

            //});

        }

        //查询数据
        $scope.queryData = function ()
        {            
            QBO.plu.grid.query(gridObj, $scope.paramsData);
        }

    }


    //初始化ng查询数据
    function initNgQuery($scope, $http, $timeout) {
        
        var BhzApi = $scope.paramsData.BhzApi;
        if (BhzApi == null || BhzApi == "") {
            return;
        }

        $scope.getCookieData();

        $scope.loadTabColSet();

        $scope.loadBhzData();

        $scope.setDateRange();
    }

</script>

<script type="text/javascript">

    //查询数据
    function ModuleQuery(data) {
  
        var appElement = document.querySelector('[ng-controller=pageCtrl]');
        var $scope = angular.element(appElement).scope();

        var TargetId = angular.copy($scope.paramsData.OrganID);//以前标段ID

        $scope.paramsData.LoadApi = 1;
        $scope.paramsData.OrganID = data.TargetId;  
        $scope.paramsData.BhzApi = data.ExtraData;

        $scope.getCookieData();       
        $scope.$apply();

        if (TargetId != data.TargetId) {
            $scope.loadBhzData();// 获取拌合机并查询列表    
        } else {
            $scope.queryData();//查询列表
        }

    }

    //选择时间查询
    function queryDate(startDate, endDate) {
        var appElement = document.querySelector('[ng-controller=pageCtrl]');
        var $scope = angular.element(appElement).scope();          
        $scope.paramsData.StartEnd = startDate + ' 至 ' + endDate;
        $scope.paramsData.StartDate = startDate;
        $scope.paramsData.EndDate = endDate;
        $scope.$apply()
        QBO.plu.grid.query(gridObj, paramsData);
    }    

    //显示列
    function onHeaderColumnsMenu(e) {
        var obj = $('.datagrid-header-rownumber_icon');
        var X = obj.position().top;
        var Y = obj.position().left;

        if (!QBC.easyUi.grid.cmenu) {
            QBO.plu.grid.createColumnMenu(gridObj, onHideCallBack);
        }
        QBC.easyUi.grid.cmenu.menu('show', {
            left: X,
            top: Y + 66
        });
    }
    
    //点击保存隐藏列
    function onHideCallBack(item) {
        var field = item.name;

        //if ($.inArray(field, hideCols) == -1)
        if (hideCols.indexOf(field) == -1) {
            //不存在 则添加
            hideCols.push(field);
        } else {
            //存在 删除
            hideCols.splice(hideCols.indexOf(field), 1);
        }

        //保存列设置
        tabCol.ColumnCode = JSON.stringify(hideCols);
        var params = { BhzApi: paramsData.BhzApi, TabCol: JSON.stringify(tabCol) };        
        QBO.plu.ajax({
            chkLogin: false,
            type: 'POST',
            data: params,
            url: 'SaveTabColSet'
        }, function (result) {

        });
    }

    //初始化列表
    function initData() {

        gridObj = $('#dg');
        
        gridObj.datagrid({
            nowrap: false,
            border: false,
            fit: true,
            fitColumns: true,
            striped: true,
            method: 'POST',
            loadMsg: '数据加载中，请稍后……',
            rownumbers: true,
            singleSelect: true,
            ctrlSelect: false,
            pagination: true,
            pageSize: 30,
            pageNumber: 1,
            pageList: [10, 15, 20, 30, 40, 50, 100, 500, 1000],
            queryParams: paramsData,
            toolbar: '#toolBarMain',
            url: '/MsSys/BhzOper/GetBhzMx1Data',
            columns: [
                [
                    { field: 'GCMC', title: '工程名称', rowspan: 2, width: 120 },
                    {
                        field: 'GCBW', title: '工程部位', rowspan: 2, width: 120,
                        formatter: function (value, data, index) {
                            if (value == null || value == '')
                                return '';
                            else
                                return '<span title="' + value + '"  class="easyui-tooltip">' + value + '</span>';
                        }
                    },
                    {
                        field: 'SJZ_FL', title: '实际方量', rowspan: 2, width: 60,
                        formatter: function (value, data, index) {
                            //return value == null ? value : value.toFixed(2);
                            return value == null ? value : Math.round(value*100)/100;
                        }
                    },
                    { field: 'QDDJ_BAK', title: '强度等级', rowspan: 2, width: 60, },
                    { field: 'ZHZ', title: '标准重量值(kg)/实际称量值(kg)/重量偏差(%)', colspan: 13 },
                    { field: 'SJZ_SN', title: '水泥标准含量<br/>水泥实际含量<br/>含量偏差值(%)', rowspan: 2, width: 80, formatter: formatMatchRatio },
                    { field: 'CLSJ', title: '出料时间', rowspan: 2, width: 100 }
                ],
                [
                    { field: 'SJZ_S', title: '水', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_SN1', title: '水泥1', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_SN2', title: '水泥2', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_GL1', title: '骨料1', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_GL2', title: '骨料2', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_GL3', title: '骨料3', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_GL4', title: '骨料4', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_GL5', title: '骨料5', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_GL6', title: '骨料6', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_KF', title: '矿粉', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_FMH', title: '粉煤灰', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_WJJ1', title: '外加剂1', width: 80, formatter: formatMatchRatio },
                    { field: 'SJZ_WJJ2', title: '外加剂2', width: 80, formatter: formatMatchRatio },
                ]
            ],
            onLoadSuccess: function (data) {
                $(".datagrid-cell").attr("title", function () { return $(this).text() });
            },
            onBeforeLoad: function (param) {
                if (hideCols != undefined && hideCols != null) {
                    for (var key in hideCols) {

                        var field = hideCols[key];

                        if (hideCols.indexOf(field) == -1) {
                            $(this).datagrid('showColumn', field);//不存在则显示
                        }
                        else {
                            $(this).datagrid('hideColumn', field);//存在则隐藏                           
                        }

                        //var col = $(this).datagrid('getColumnOption', field);
                        //if (col.hidden) {
                        //    $(this).datagrid('showColumn', field);
                        //}
                        //else {
                        //    $(this).datagrid('hideColumn', field);
                        //}
                    }
                }
            },
            onLoadError: function () {

            },
            onHeaderContextMenu: function (e, field) {
                //鼠标右键点击标题列显示隐藏“普通列”事件
                e.preventDefault();
                if (!QBC.easyUi.grid.cmenu) {
                    QBO.plu.grid.createColumnMenu(gridObj, onHideCallBack);
                }
                QBC.easyUi.grid.cmenu.menu('show', {
                    left: e.pageX,
                    top: e.pageY
                });
            },
            onClickRow: function (index, row) {

            },
            onClickCell: function (index, field, value) {

            },
            onSelect: function (index, row) {

            }
        });
    }

    //格式化处理
    function formatMatchRatio(value, row, index) {

        if (value == null) return;

        var array = value.split(',');

        var planQty = array[0];
        var factQty = array[1];
        var ratio = array[2];
        var type = parseInt(array[3]);

        var rt_val = null;
        if (type == 0) {
            rt_val = planQty + '<br>' + factQty + '<br>' + ratio;
        }
        else if (type == 1) {
            rt_val = planQty + '<br>' + factQty + '<br><span style="color:blue;">' + ratio + '</span>';
        }
        else if (type == 2) {
            rt_val = planQty + '<br>' + factQty + '<br><span style="color:blueviolet;">' + ratio + '</span>';
        }
        else if (type == 3) {
            rt_val = planQty + '<br>' + factQty + '<br><span style="color:orange;">' + ratio + '</span>';
        }
        else if (type == 4) {
            rt_val = planQty + '<br>' + factQty + '<br><span style="color:red;">' + ratio + '</span>';
        }
        else {
            rt_val = planQty + '<br>' + factQty + '<br>' + ratio;
        }

        var title = (type >= 1 ? "第" + type + "级报警" : "");

        return '<div title="'+title+'" style="line-height:25px">' + rt_val + '</div>';

    }


</script>

